A standalone win64 program which attempts to imitate 
winbio framework by dynamically loading the synaWudfBioUsb.dll driver
and making ioctl requests to scan/enroll fingers.


To build you will need 64bit version of mingw cross-compiler
and winbio_ioctl.h/winbio_types.h from wdk/visual studio/whatever.
Use mk script to build the a.exe

To run: drop synaWudfBioUsb.dll in the same folder as a.exe. 
* Make sure you're using a version of wine with hacks designed 
  specifically for this thing to work: 
  https://github.com/uunicorn/wine/tree/hacking/validiy-sensor
* Set up 64bit wine prefix
* Within this prefix create a file c:\usb.txt. It does not matter 
  what's inside the file but it must exist because this is a 
  "device" pipe name which "framework" tells the driver to open.
  The open file handle is passed down to the stub winusb implementation 
  which completely ignores it at the moment.
* Check the .inf file which comes with synaWudfBioUsb.dll to see
  where you need to copy your firmware file (*.xpfwext) to.
* Set environment variables similar to env.sh
* Run /usr/lib/wine/wine64 a.exe 2>&1 | tee logfile.txt
* It may "fail" the first couple of times: whenever driver detects
  that device ownership has changed (host computer details have changed), 
  it needs to re-flash and re-calibrate the device to establish a new
  trust. After each step USB device is reconnected. The current 
  winusb stub is not smart enough to detect device reconnects, so the 
  next driver's attempt to talk to the device will immediately fail.
  Just restart a.exe a couple of times before giving up.
